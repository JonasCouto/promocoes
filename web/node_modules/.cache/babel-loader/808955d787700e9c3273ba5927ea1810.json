{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\promocoes\\\\web\\\\src\\\\components\\\\Promotion\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport PromotionCard from 'components/Promotion/Card/Card';\nimport PromotionList from \"../List/List\";\nimport { Link } from 'react-router-dom';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PromotionSearch = () => {\n  _s();\n\n  // useState é uma lista vazia que vai receber as promocoes.\n  const [promotions, setPromotions] = useState([]);\n  const [search, setSearch] = useState(''); // Usando o 'useEffect' com uma lista vazia, só sera carregado 1 vez.\n\n  useEffect(() => {\n    const params = {}; // verifica se o serch tem valor no input\n\n    if (search) {\n      params.title_like = search;\n    }\n\n    axios.get('http://localhost:5000/promotions?_embed=comments', {\n      params\n    }).then(response => {\n      setPromotions(response.data);\n      console.log(response.data);\n    });\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"promotion-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"promotion-search__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Promo Show \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        children: \" Nova Promo\\xE7\\xE3o \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      className: \"promotion-search__input\",\n      placeholder: \"Buscar\",\n      value: search,\n      onChange: ev => setSearch(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PromotionList, {\n      promotions: promotions,\n      loading: promotions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}; // value={search} onChange={ (ev)=> setSearch(ev.target.value) }\n\n\n_s(PromotionSearch, \"2QNd+4woXLHeY5Xvt4yhIStCqEc=\");\n\n_c = PromotionSearch;\nexport default PromotionSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PromotionSearch\");","map":{"version":3,"sources":["D:/ReactJs/promocoes/web/src/components/Promotion/Search/Search.js"],"names":["React","axios","useEffect","useState","PromotionCard","PromotionList","Link","PromotionSearch","promotions","setPromotions","search","setSearch","params","title_like","get","then","response","data","console","log","ev","target","value","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,cAAP;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAE,EAAF,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAJ0B,CAM1B;;AACAD,EAAAA,SAAS,CAAE,MAAK;AAEhB,UAAMU,MAAM,GAAG,EAAf,CAFgB,CAGhB;;AACA,QAAGF,MAAH,EAAU;AACNE,MAAAA,MAAM,CAACC,UAAP,GAAoBH,MAApB;AACH;;AAEDT,IAAAA,KAAK,CAACa,GAAN,CAAU,kDAAV,EAA6D;AAACF,MAAAA;AAAD,KAA7D,EACCG,IADD,CACQC,QAAD,IAAa;AAEhBP,MAAAA,aAAa,CAACO,QAAQ,CAACC,IAAV,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH,KALD;AAMC,GAdQ,EAcN,CAACP,MAAD,CAdM,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,yBAA/B;AAAyD,MAAA,WAAW,EAAC,QAArE;AAA8E,MAAA,KAAK,EAAEA,MAArF;AAA6F,MAAA,QAAQ,EAAIU,EAAD,IAAOT,SAAS,CAACS,EAAE,CAACC,MAAH,CAAUC,KAAX;AAAxH;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEd,UAA3B;AAAuC,MAAA,OAAO,EAAEA,UAAU,CAACe;AAA3D;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlCD,C,CAmCA;;;GAnCMhB,e;;KAAAA,e;AAoCN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport PromotionCard from 'components/Promotion/Card/Card';\r\nimport PromotionList from \"../List/List\";\r\nimport {Link} from 'react-router-dom';\r\nimport './Search.css';\r\n\r\n\r\nconst PromotionSearch = () => {\r\n\r\n    // useState é uma lista vazia que vai receber as promocoes.\r\n    const [promotions, setPromotions] = useState( [] );\r\n    const [search, setSearch] = useState('');\r\n\r\n    // Usando o 'useEffect' com uma lista vazia, só sera carregado 1 vez.\r\n    useEffect( () =>{\r\n    \r\n    const params = {};\r\n    // verifica se o serch tem valor no input\r\n    if(search){\r\n        params.title_like = search;\r\n    }\r\n\r\n    axios.get('http://localhost:5000/promotions?_embed=comments',{params})\r\n    .then( (response) =>{\r\n\r\n        setPromotions(response.data)\r\n        console.log(response.data);\r\n    } );  \r\n    }, [search]);\r\n      \r\n    return(\r\n        <div className=\"promotion-search\">\r\n            <header className=\"promotion-search__header\">\r\n                <h1> Promo Show </h1>\r\n                <Link to=\"/create\"> Nova Promoção </Link>                \r\n            </header>\r\n            <input type=\"search\" className=\"promotion-search__input\" placeholder=\"Buscar\" value={search} onChange={ (ev)=> setSearch(ev.target.value) }></input>\r\n\r\n            <PromotionList promotions={promotions} loading={promotions.length} />\r\n        </div>\r\n    )\r\n}\r\n// value={search} onChange={ (ev)=> setSearch(ev.target.value) }\r\nexport default PromotionSearch;"]},"metadata":{},"sourceType":"module"}